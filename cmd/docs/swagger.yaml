definitions:
  requests.CreateUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  responses.CreateUserResponse:
    properties:
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /health:
    get:
      description: Health checking for the service
      operationId: HealthHandler
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
  /user:
    post:
      consumes:
      - application/json
      description: create new user
      operationId: CreateUserHandler
      parameters:
      - description: With x-id header
        in: header
        name: X-ID
        required: true
        type: string
      - description: Data for create user
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
